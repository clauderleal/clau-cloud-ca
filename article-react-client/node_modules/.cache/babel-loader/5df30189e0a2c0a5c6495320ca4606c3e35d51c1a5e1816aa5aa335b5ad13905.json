{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Claudemar\\\\Desktop\\\\react-rails-app\\\\article-react\\\\src\\\\components\\\\Article.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    title: '',\n    body: '',\n    published: false\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    const val = type === 'checkbox' ? checked : value;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: val\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const url = 'http://localhost:4000/articles'; // Replace with your API URL\n\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Post created successfully:', data);\n        // You can handle success, such as showing a success message or redirecting\n      } else {\n        throw new Error('Failed to create post');\n      }\n    } catch (error) {\n      console.error('Error creating post:', error.message);\n      // You can handle errors here, such as showing an error message\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        value: formData.title,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Body:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"body\",\n        value: formData.body,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Published:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"published\",\n        checked: formData.published,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(MyForm, \"LLJNlOUQE31C/mmnOdNRq/CUVyc=\");\n_c = MyForm;\nexport default MyForm;\nvar _c;\n$RefreshReg$(_c, \"MyForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MyForm","_s","formData","setFormData","title","body","published","handleChange","e","name","value","type","checked","target","val","prevData","handleSubmit","preventDefault","url","response","fetch","method","headers","JSON","stringify","ok","data","json","console","log","Error","error","message","onSubmit","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Claudemar/Desktop/react-rails-app/article-react/src/components/Article.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst MyForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    body: '',\r\n    published: false\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    const val = type === 'checkbox' ? checked : value;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: val\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const url = 'http://localhost:4000/articles'; // Replace with your API URL\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(formData)\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log('Post created successfully:', data);\r\n        // You can handle success, such as showing a success message or redirecting\r\n      } else {\r\n        throw new Error('Failed to create post');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating post:', error.message);\r\n      // You can handle errors here, such as showing an error message\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Title:\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          value={formData.title}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        Body:\r\n        <textarea\r\n          name=\"body\"\r\n          value={formData.body}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        Published:\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"published\"\r\n          checked={formData.published}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <button type=\"submit\">Create Post</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MyForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}